<blocks app="Snap! 9.0, https://snap.berkeley.edu" version="2"><palette><category name="Tests" color="146,109,0,1"/><category name="Collections" color="255,44,194,1"/></palette><block-definition s="Test Suite %&apos;name&apos; %&apos;¤&apos; %&apos;content&apos;" type="reporter" category="Tests"><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%upvar"></input><input type="%cs"></input></inputs><script><block s="doDeclareVariables"><list><l>test name</l><l>passed</l><l>failed</l></list></block><block s="doSetVar"><l>¤</l><block s="reportNewList"><list><block s="reportNewList"><list></list></block><custom-block s="{ %mult%mlt }"><list></list></custom-block></list></block></block><block s="doRun"><block var="content"/><list></list></block><block s="doWarp"><script><block s="doSetVar"><l>passed</l><l>0</l></block><block s="doSetVar"><l>failed</l><block s="reportNewList"><list></list></block></block><block s="doForEach"><l>test</l><block s="reportListItem"><l>1</l><block var="¤"/></block><script><block s="doSetVar"><l>test name</l><block s="reportListItem"><l>1</l><block var="test"/></block></block><block s="doForEach"><l>assertion</l><block s="reportCDR"><block var="test"/></block><script><block s="doIfElse"><block s="reportListItem"><l>2</l><block var="assertion"/></block><script><block s="doChangeVar"><l>passed</l><l>1</l></block></script><script><block s="doAddToList"><block s="reportNewList"><list><block var="test name"/><block s="reportListItem"><l>1</l><block var="assertion"/></block></list></block><block var="failed"/></block></script></block></script></block></script></block><block s="doReport"><block s="reportConcatenatedLists"><list><block s="reportNewList"><list><block s="reportNewList"><list><l>Tests</l><block s="reportVariadicSum"><list><block var="passed"/><block s="reportListAttribute"><l><option>length</option></l><block var="failed"/></block></list></block></list></block><block s="reportNewList"><list><l>Passed</l><block var="passed"/></list></block><block s="reportNewList"><list><l>Failed</l><block s="reportListAttribute"><l><option>length</option></l><block var="failed"/></block></list></block></list></block><block var="failed"/></list></block></block></script></block></script></block-definition><block-definition s="Set %&apos;context&apos; $nl %&apos;vars&apos;" type="command" category="Tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%mult%repRing"></input></inputs><script><block s="doWarp"><script><block s="doDeclareVariables"><list><l>map</l></list></block><block s="doSetVar"><l>map</l><block s="reportListItem"><l>2</l><block var="context"/></block></block><block s="doForEach"><l>setter</l><block var="vars"/><script><custom-block s="add or replace { %mult%mlt } in %s"><list><custom-block s="%txt : %s"><block s="reportListItem"><l>1</l><block var="setter"/></block><block s="reportListItem"><l>2</l><block var="setter"/></block></custom-block></list><block var="map"/></custom-block></script></block></script></block></script></block-definition><block-definition s="When %&apos;name&apos; $nl %&apos;act&apos; Then %&apos;context&apos; $nl %&apos;assertions&apos;" type="command" category="Tests"><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%cs"></input><input type="%s"></input><input type="%mult%boolUE"></input></inputs><script><block s="doDeclareVariables"><list><l>global_backup</l><l>map</l><l>result</l></list></block><block s="doSetVar"><l>global_backup</l><custom-block s="{ %mult%mlt }"><custom-block s="keys and values of %s"><block s="reportListItem"><l>2</l><block var="context"/></block></custom-block></custom-block></block><block s="doRun"><block var="act"/><list></list></block><block s="doWarp"><script><block s="doSetVar"><l>map</l><block s="reportListItem"><l>2</l><block var="context"/></block></block><block s="doSetVar"><l>result</l><block s="reportNewList"><list><block var="name"/></list></block></block><block s="doForEach"><l>assertion</l><block var="assertions"/><script><block s="doAddToList"><block s="reportNewList"><list><block var="assertion"/><custom-block s="evaluate unevaluated %s with vars from %s"><block var="assertion"/><block var="map"/></custom-block></list></block><block var="result"/></block></script></block><block s="doReplaceInList"><l>2</l><block var="context"/><block var="global_backup"/></block><block s="doAddToList"><block var="result"/><block s="reportListItem"><l>1</l><block var="context"/></block></block></script></block></script></block-definition><block-definition s="var %&apos;var&apos; is %&apos;value&apos;" type="reporter" category="Tests"><header></header><code></code><translations></translations><inputs><input type="%anyUE"></input><input type="%s"></input></inputs><script><block s="doReport"><block s="reportNewList"><list><block s="reportBlockAttribute"><l><option>label</option></l><block var="var"/></block><block var="value"/></list></block></block></script></block-definition><block-definition s="var %&apos;var&apos;" type="reporter" category="Tests"><header></header><code></code><translations></translations><inputs><input type="%anyUE"></input></inputs><script><block s="doReport"><block s="reportBlockAttribute"><l><option>label</option></l><block var="var"/></block></block></script></block-definition><block-definition s="evaluate %&apos;block&apos; with vars from %&apos;dict&apos;" type="reporter" category="Tests"><header></header><code></code><translations></translations><inputs><input type="%anyUE"></input><input type="%s"></input></inputs><script><block s="doReport"><custom-block s="evaluate tree %s with vars from %s"><block s="reportTextSplit"><block var="block"/><l><option>blocks</option></l></block><block var="dict"/></custom-block></block></script></block-definition><block-definition s="evaluate unevaluated %&apos;block&apos; with vars from %&apos;dict&apos;" type="reporter" category="Tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%s"></input></inputs><script><block s="doReport"><custom-block s="evaluate tree %s with vars from %s"><block s="reportTextSplit"><block var="block"/><l><option>blocks</option></l></block><block var="dict"/></custom-block></block></script></block-definition><block-definition s="evaluate tree %&apos;tree&apos; with vars from %&apos;dict&apos;" type="reporter" category="Tests"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%s"></input></inputs><script><block s="doWarp"><script><block s="doIf"><block s="reportNot"><block s="reportIsA"><block var="tree"/><l><option>list</option></l></block></block><script><block s="doReport"><block var="tree"/></block></script><list></list></block><block s="doIf"><block s="reportVariadicEquals"><list><block s="reportBlockAttribute"><l><option>label</option></l><block s="reportListItem"><l>1</l><block var="tree"/></block></block><l>var _</l></list></block><script><block s="doReport"><custom-block s="%s [ %txt ]"><block var="dict"/><block s="reportListItem"><l>2</l><block s="reportListItem"><l>2</l><block var="tree"/></block></block></custom-block></block></script><list><l><bool>true</bool></l><script><block s="doReport"><block s="evaluate"><block s="reportListItem"><l>1</l><block var="tree"/></block><block s="reportMap"><block s="reifyReporter"><autolambda><custom-block s="evaluate tree %s with vars from %s"><l></l><block var="dict"/></custom-block></autolambda><list></list></block><block s="reportCDR"><block var="tree"/></block></block></block></block></script></list></block></script></block></script></block-definition><block-definition s="%&apos;dict&apos; [ %&apos;key&apos; ]" type="reporter" category="Collections"><header></header><code></code><translations></translations><inputs><input type="%s"></input><input type="%txt"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>dict</l><l>key</l></list><l>return dict.get(key);</l></block><list><block var="dict"/><block var="key"/></list></block></block></script></block-definition><block-definition s="{ %&apos;keys-values&apos; }" type="reporter" category="Collections"><header></header><code></code><translations></translations><inputs><input type="%mult%mlt"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>items</l></list><l>var kvs=[];&#xD;for (let i = 0; i &lt; items.contents.length; i++) {&#xD;  kv = items.contents[i].contents&#xD;  kvs.push(kv);&#xD;}&#xD;return new Map(kvs);</l></block><list><block var="keys-values"/></list></block></block></script></block-definition><block-definition s="keys and values of %&apos;dict&apos;" type="reporter" category="Collections"><header></header><code></code><translations></translations><inputs><input type="%s"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>dict</l></list><l>return new List(Array.from(dict.entries(), x =&gt; new List(x)));</l></block><list><block var="dict"/></list></block></block></script></block-definition><block-definition s="%&apos;key&apos; : %&apos;value&apos;" type="reporter" category="Collections"><header></header><code></code><translations></translations><inputs><input type="%txt"></input><input type="%s"></input></inputs><script><block s="doReport"><block s="reportNewList"><list><block var="key"/><block var="value"/></list></block></block></script></block-definition><block-definition s="add or replace { %&apos;keys-values&apos; } in %&apos;dict&apos;" type="command" category="Collections"><header></header><code></code><translations></translations><inputs><input type="%mult%mlt"></input><input type="%s"></input></inputs><script><block s="doReport"><block s="evaluate"><block s="reportJSFunction"><list><l>dict</l><l>items</l></list><l>var kvs=[];&#xD;for (let i = 0; i &lt; items.contents.length; i++) {&#xD;  kv = items.contents[i].contents&#xD;  dict.set(kv[0],kv[1]);&#xD;}</l></block><list><block var="dict"/><block var="keys-values"/></list></block></block></script></block-definition></blocks>